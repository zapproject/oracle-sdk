/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZapMaster, ZapMasterInterface } from "../ZapMaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_zapContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newZap",
        type: "address",
      },
    ],
    name: "NewZapAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vaultContract",
        type: "address",
      },
    ],
    name: "changeVaultContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_challenge",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_miner",
        type: "address",
      },
    ],
    name: "didMine",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "didVote",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_data",
        type: "bytes32",
      },
    ],
    name: "getAddressVars",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
    ],
    name: "getAllDisputeVars",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[9]",
        name: "",
        type: "uint256[9]",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentVariables",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
    ],
    name: "getDisputeIdByDisputeHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_data",
        type: "bytes32",
      },
    ],
    name: "getDisputeUintVars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastNewValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getLastNewValueById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getMinedBlockNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getMinersByRequestIdAndTimestamp",
    outputs: [
      {
        internalType: "address[5]",
        name: "",
        type: "address[5]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getNewValueCountbyRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_request",
        type: "bytes32",
      },
    ],
    name: "getRequestIdByQueryHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getRequestIdByRequestQIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getRequestIdByTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequestQ",
    outputs: [
      {
        internalType: "uint256[51]",
        name: "",
        type: "uint256[51]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_data",
        type: "bytes32",
      },
    ],
    name: "getRequestUintVars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRequestVars",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getStakerInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getSubmissionsByTimestamp",
    outputs: [
      {
        internalType: "uint256[5]",
        name: "",
        type: "uint256[5]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getTimestampbyRequestIDandIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_data",
        type: "bytes32",
      },
    ],
    name: "getUintVar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVariablesOnDeck",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "isInDispute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "retrieveData",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokenSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c1638038062001c16833981016040819052620000349162000237565b604980546001600160a01b0383166001600160a01b031991821681179092557f0dbd11667cb3ff39667584f924913ce4dcfc6917743490eff0a0ac17f29b151e6000908152603f6020527fc5d5df8489ed162ad95aee74a257293c0a4237df2a31e83b0d8cbd05fa533a48805490921690921790556040516347b024eb60e01b815273__$341c69a3b8ea65d7eeecd190190dea4d1b$__916347b024eb91620000e4919060040190815260200190565b60006040518083038186803b158015620000fd57600080fd5b505af415801562000112573d6000803e3d6000fd5b5050603f60209081527f77fe60635f602ff3815e40e1a4ed9026273a2eaf4e65856aaf7dfc8a2f0da6998054336001600160a01b031991821681179092557fe82bad50ed21b0b346eda61b3dfbb0532423ce1e0ded398f9e213767e30bf14780548216831790557f710052ea0d12b2397f41c761f87b3558ef80d996883cf1def28dfbcfc47780236000527f335ff78e0d6ba44a6d9321c4133511a8ad65b142fc6b0abee992f17a25a9b10a805482166001600160a01b038916908117909155604a805490921690921790556040519081527f4a9a276906262ed9ed5e1fd15850a5f2b951b97198cc2fc0d32625f1bf3ab270935001905060405180910390a150506200026e565b80516001600160a01b03811681146200023257600080fd5b919050565b600080604083850312156200024a578182fd5b62000255836200021a565b915062000265602084016200021a565b90509250929050565b611998806200027e6000396000f3fe6080604052600436106101d15760003560e01c806377fbb663116100f7578063af2a510211610095578063dd62ed3e11610064578063dd62ed3e146106e4578063e0ae93c114610704578063e1eee6d614610724578063fc7cf0a01461075657610210565b8063af2a510214610660578063b541302914610682578063c775b542146106a4578063da379941146106c457610210565b806393fa4915116100d157806393fa4915146105c4578063a22e407a146105e4578063a7c438bc1461060b578063af0b13271461062b57610210565b806377fbb663146105645780637f6fd5d9146105845780638da5cb5b146105a457610210565b80633df0777b1161016f57806363bb82ad1161013e57806363bb82ad146104c257806369026d63146104e257806370a082311461050f578063733bdef01461052f57610210565b80633df0777b1461043257806346eee1c414610462578063612c8f7f146104825780636173c0b8146104a257610210565b806319e8e03b116101ab57806319e8e03b1461035c5780631ca8b6cb146103805780631db842f0146103dd5780633180f8df146103fd57610210565b80630f0b424d146102c457806311c98512146102f7578063133bee5e1461032457610210565b3661021057604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874910160405180910390a1005b7f710052ea0d12b2397f41c761f87b3558ef80d996883cf1def28dfbcfc47780236000908152603f60209081527f335ff78e0d6ba44a6d9321c4133511a8ad65b142fc6b0abee992f17a25a9b10a546040805136601f81018590048502820185019092528181526001600160a01b03909216939283919081908401838280828437600092018290525084519495509384935091505060208401855af43d604051816000823e8280156102c0578282f35b8282fd5b3480156102d057600080fd5b506102e46102df36600461168d565b6107b3565b6040519081526020015b60405180910390f35b34801561030357600080fd5b506103176103123660046116df565b6107c9565b6040516102ee91906117ae565b34801561033057600080fd5b5061034461033f36600461168d565b6107e4565b6040516001600160a01b0390911681526020016102ee565b34801561036857600080fd5b50610371610801565b6040516102ee939291906118dc565b34801561038c57600080fd5b507fb1557182e4359a1f0c6301278e8f5b35a776ab58d39892581e357578fb28783660005260406020527f39efff102fba42ea00eb856629a713fead698b2401b1a7fdf4afafc9ef898fd1546102e4565b3480156103e957600080fd5b506102e46103f836600461168d565b610820565b34801561040957600080fd5b5061041d61041836600461168d565b610834565b604080519283529015156020830152016102ee565b34801561043e57600080fd5b5061045261044d3660046116df565b61084a565b60405190151581526020016102ee565b34801561046e57600080fd5b506102e461047d36600461168d565b61086f565b34801561048e57600080fd5b506102e461049d36600461168d565b610886565b3480156104ae57600080fd5b506102e46104bd36600461168d565b61089a565b3480156104ce57600080fd5b506104526104dd3660046116a5565b6108a6565b3480156104ee57600080fd5b506105026104fd3660046116df565b6108d1565b6040516102ee919061174b565b34801561051b57600080fd5b506102e461052a366004611641565b6108e5565b34801561053b57600080fd5b5061054f61054a366004611641565b610963565b604080519283526020830191909152016102ee565b34801561057057600080fd5b506102e461057f3660046116df565b61098b565b34801561059057600080fd5b506102e461059f3660046116df565b610998565b3480156105b057600080fd5b50604a54610344906001600160a01b031681565b3480156105d057600080fd5b506102e46105df3660046116df565b6109ba565b3480156105f057600080fd5b506105f96109dc565b6040516102ee96959493929190611857565b34801561061757600080fd5b506104526106263660046116a5565b610a03565b34801561063757600080fd5b5061064b61064636600461168d565b610a31565b6040516102ee999897969594939291906117d6565b34801561066c57600080fd5b5061068061067b366004611641565b610a6f565b005b34801561068e57600080fd5b50610697610b05565b6040516102ee9190611785565b3480156106b057600080fd5b506102e46106bf3660046116df565b610b17565b3480156106d057600080fd5b506102e46106df36600461168d565b610b39565b3480156106f057600080fd5b506102e46106ff36600461165b565b610b4d565b34801561071057600080fd5b506102e461071f3660046116df565b610bd3565b34801561073057600080fd5b5061074461073f36600461168d565b610bf5565b6040516102ee96959493929190611891565b34801561076257600080fd5b507f56ed6ca285f512c2643e5f72926a108bde86cf97e1be4aabb5c6bf871b3fd62a54600081815260426020908152604080832054835260468252808320938352600690930190522054600161041d565b6000818152604260205260408120545b92915050565b6107d16115c9565b6107dd60008484610c1b565b9392505050565b6000818152603f60205260408120546001600160a01b03166107c3565b60008060606108106000610c75565b925092509250909192565b905090565b6000818152604760205260408120546107c3565b6000806108418184610d6c565b91509150915091565b600082815260466020908152604080832084845260070190915281205460ff166107dd565b6000818152604660205260408120600301546107c3565b6000818152604060208190528120546107c3565b60006107c38183610e0d565b60008281526041602090815260408083206001600160a01b038516845290915281205460ff166107dd565b6108d96115c9565b6107dd60008484610e34565b6049546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a082319060240160206040518083038186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c391906116c7565b6001600160a01b03811660009081526045602052604081208054600190910154829190610841565b60006107dd818484610e98565b60008281526044602090815260408083208484526007019091528120546107dd565b60008281526046602090815260408083208484526006019091528120546107dd565b600080600060606000806109f06000610edf565b949b939a50919850965094509092509050565b60008281526044602090815260408083206001600160a01b038516845260080190915281205460ff166107dd565b6000806000806000806000610a446115e7565b6000610a50818b611053565b9850985098509850985098509850985098509193959799909294969850565b604a546001600160a01b03163314610acd5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f776e65722063616e207472616e736665722062616c616e63652e604482015260640160405180910390fd5b604a54600160a01b900460ff1615610ae457600080fd5b604a805460ff60a01b1916600160a01b179055610b02600082611282565b50565b610b0d611606565b61081b600061131b565b60008281526046602090815260408083208484526005019091528120546107dd565b6000818152604860205260408120546107c3565b604954604051636eb1769f60e11b81526001600160a01b0384811660048301528381166024830152600092169063dd62ed3e9060440160206040518083038186803b158015610b9b57600080fd5b505afa158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd91906116c7565b60008281526046602090815260408083208484526004019091528120546107dd565b6060806000808080610c07818861135b565b949c939b5091995097509550909350915050565b610c236115c9565b6000838152604685016020908152604080832085845260090190915290819020815160a08101928390529160059082845b815481526020019060010190808311610c5457505050505090509392505050565b60008060606000610c8585611539565b600081815260468701602081815260408084207f2a9e355a92978430eca9c1aa3a9ba590094bac282594bccf82de16b83046e2c385526004810183529084205493859052919052805492935083928190610cde90611927565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0a90611927565b8015610d575780601f10610d2c57610100808354040283529160200191610d57565b820191906000526020600020905b815481529060010190602001808311610d3a57829003601f168201915b50505050509050935093509350509193909250565b60008181526046830160205260408120600381015482919015610dfd57600381018054610df1918791879190610da490600190611904565b81548110610dc257634e487b7160e01b600052603260045260246000fd5b906000526020600020015460009182526046929092016020908152604080832093835260069093019052205490565b60019250925050610e06565b60008092509250505b9250929050565b60006032821115610e1d57600080fd5b506000908152604391909101602052604090205490565b610e3c6115c9565b6000838152604685016020908152604080832085845260080190915290819020815160a08101928390529160059082845b81546001600160a01b03168152600190910190602001808311610e6d57505050505090509392505050565b60008281526046840160205260408120600301805483908110610ecb57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490509392505050565b80547f7584d7d8701714da9c117f5bf30af73b0b88aca5338a84a21eb28de2fe0d93b8600090815260408084016020908152818320547fb12aff7664b16cb99339be399b863feecd64d14817be7e1f042f97e3f358e64e8452828420548185526046870183528385207fba3571a50e0c436953d31396edfb65be5925bcc7fef5a3441ed5d43dbce2548f865260048101808552858720547f2a9e355a92978430eca9c1aa3a9ba590094bac282594bccf82de16b83046e2c3885294529385205484549596879687966060968896879694959094938390610fbe90611927565b80601f0160208091040260200160405190810160405280929190818152602001828054610fea90611927565b80156110375780601f1061100c57610100808354040283529160200191611037565b820191906000526020600020905b81548152906001019060200180831161101a57829003601f168201915b5050505050925095509550955095509550955091939550919395565b60008060008060008060006110666115e7565b505050600095865250505050604492909201602090815260408083208054600282015460048301546005840154600685015460038601548751610120810189527f31b40192effc42bcf1e4289fe674c678e673a3052992548fef566d8c33a21b918b5260078801808b52898c205482527f4ebf727c48eac2c66272456b06a885c5cc03e54d140f63b63b6fd10c1227958e8c52808b52898c2054828c01527f81afeeaff0ed5cee7d05a21078399c2f56226b0cd5657062500cef4c4e736f858c52808b52898c2054828b01527f74c9bc34b0b2333f1b565fbee67d940cf7d78b5a980c5f23da43f6729965ed408c52808b52898c205460608301527fa0bc13ce85a2091e950a370bced0825e58ab3a3ffeb709ed50d5562cbd82faab8c52808b52898c205460808301527f6f8f54d1af9b6cb8a219d88672c797f9f3ee97ce5d9369aa897fd0deb5e2dffa8c52808b52898c205460a08301527f8ef61a1efbc527d6428ff88c95fdff5c6e644b979bfe67e03cbf88c8162c5fac8c52808b52898c205460c08301527f30e85ae205656781c1a951cba9f9f53f884833c049d377a2a7046eb5e6d14b268c52808b52898c205460e08301527f833b9f6abf0b529613680afe2a00fa663cc95cbdc47d726d85a044462eabbf028c52909952969098205461010080890191909152600190950154939960ff8085169a5095909304909416966001600160a01b03918216969482169591169390929091565b7f9dbc393ddc18fd27b1d9b1b129059925688d2f2d5818a5ec3ebb750b7c286ea66000908152603f830160205260409020546001600160a01b031633146112c857600080fd5b7f973059b1f52a2bdab7ecb9e4cd36d6cb999848b14684091a5057353deb173ed76000908152603f92909201602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b611323611606565b6040805161066081019182905290600184019060339082845b81548152602001906001019080831161133c5750505050509050919050565b6000818152604683016020908152604080832060028101547fba3571a50e0c436953d31396edfb65be5925bcc7fef5a3441ed5d43dbce2548f855260048201909352818420547f1e344bd070f05f1c5b3f0b1266f4f20d837a0a8190a3a2da8b0375eac2ba86ea8552828520547f2a9e355a92978430eca9c1aa3a9ba590094bac282594bccf82de16b83046e2c386529285205482546060968796909586958695869591948594600186019490939091869061141690611927565b80601f016020809104026020016040519081016040528092919081815260200182805461144290611927565b801561148f5780601f106114645761010080835404028352916020019161148f565b820191906000526020600020905b81548152906001019060200180831161147257829003601f168201915b505050505095508480546114a290611927565b80601f01602080910402602001604051908101604052809291908181526020018280546114ce90611927565b801561151b5780601f106114f05761010080835404028352916020019161151b565b820191906000526020600020905b8154815290600101906020018083116114fe57829003601f168201915b50505050509450965096509650965096509650509295509295509295565b604080516106608101918290526000918291829161157a9190600187019060339082845b81548152602001906001019080831161155d575050505050611595565b60009081526043909501602052505060409092205492915050565b60008060005b60338110156115c35760208102840151808410156115ba578093508192505b5060010161159b565b50915091565b6040518060a001604052806005906020820280368337509192915050565b6040518061012001604052806009906020820280368337509192915050565b6040518061066001604052806033906020820280368337509192915050565b80356001600160a01b038116811461163c57600080fd5b919050565b600060208284031215611652578081fd5b6107dd82611625565b6000806040838503121561166d578081fd5b61167683611625565b915061168460208401611625565b90509250929050565b60006020828403121561169e578081fd5b5035919050565b600080604083850312156116b7578182fd5b8235915061168460208401611625565b6000602082840312156116d8578081fd5b5051919050565b600080604083850312156116f1578182fd5b50508035926020909101359150565b60008151808452815b8181101561172557602081850181015186830182015201611709565b818111156117365782602083870101525b50601f01601f19169290920160200192915050565b60a08101818360005b600581101561177c5781516001600160a01b0316835260209283019290910190600101611754565b50505092915050565b6106608101818360005b603381101561177c57815183526020928301929091019060010161178f565b60a08101818360005b600581101561177c5781518352602092830192909101906001016117b7565b89815288151560208083019190915288151560408301526001600160a01b0388811660608401528781166080840152861660a083015260c0820185905261022082019060e083018560005b600981101561183e57815183529183019190830190600101611821565b50505050826102008301529a9950505050505050505050565b86815285602082015284604082015260c06060820152600061187c60c0830186611700565b60808301949094525060a00152949350505050565b60c0815260006118a460c0830189611700565b82810360208401526118b68189611700565b9150508560408301528460608301528360808301528260a0830152979650505050505050565b8381528260208201526060604082015260006118fb6060830184611700565b95945050505050565b60008282101561192257634e487b7160e01b81526011600452602481fd5b500390565b600181811c9082168061193b57607f821691505b6020821081141561195c57634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122061f97e82b6d5230a99779b12abeb469325e70b85a98d0e6a67e050e018772e2c64736f6c63430008040033";

type ZapMasterConstructorParams =
  | [linkLibraryAddresses: ZapMasterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZapMasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ZapMaster__factory extends ContractFactory {
  constructor(...args: ZapMasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ZapMaster__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = "ZapMaster";
  }

  static linkBytecode(linkLibraryAddresses: ZapMasterLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$341c69a3b8ea65d7eeecd190190dea4d1b\\$__", "g"),
      linkLibraryAddresses[
        "contracts/zap-miner/libraries/ZapStake.sol:ZapStake"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _zapContract: string,
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZapMaster> {
    return super.deploy(
      _zapContract,
      tokenAddress,
      overrides || {}
    ) as Promise<ZapMaster>;
  }
  getDeployTransaction(
    _zapContract: string,
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _zapContract,
      tokenAddress,
      overrides || {}
    );
  }
  attach(address: string): ZapMaster {
    return super.attach(address) as ZapMaster;
  }
  connect(signer: Signer): ZapMaster__factory {
    return super.connect(signer) as ZapMaster__factory;
  }
  static readonly contractName: "ZapMaster";
  public readonly contractName: "ZapMaster";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZapMasterInterface {
    return new utils.Interface(_abi) as ZapMasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZapMaster {
    return new Contract(address, _abi, signerOrProvider) as ZapMaster;
  }
}

export interface ZapMasterLibraryAddresses {
  ["contracts/zap-miner/libraries/ZapStake.sol:ZapStake"]: string;
}
